# Generated by Django 4.2.16 on 2024-10-23 19:27

import api.models.scan
import api.models.scan_photo
import api.models.scan_result
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        ("api", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Scan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (api.models.scan.ScanStatusType["INITIALIZED"], "Initialized"),
                            (api.models.scan.ScanStatusType["FINISHED"], "Finished"),
                        ],
                        default=api.models.scan.ScanStatusType["INITIALIZED"],
                        max_length=50,
                    ),
                ),
                ("hash", models.CharField(blank=True, max_length=100, null=True)),
                ("questionnaire_answers", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ScanResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "tooth_type",
                    models.CharField(
                        choices=[
                            (
                                api.models.scan_result.ScanResultToothType["TOOTH_12"],
                                "1",
                            ),
                            (
                                api.models.scan_result.ScanResultToothType["TOOTH_22"],
                                "2",
                            ),
                        ],
                        default=api.models.scan_result.ScanResultToothType["TOOTH_11"],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            (
                                api.models.scan_result.ScanResultSeverityType["LOW"],
                                "low",
                            ),
                            (
                                api.models.scan_result.ScanResultSeverityType["MEDIUM"],
                                "medium",
                            ),
                            (
                                api.models.scan_result.ScanResultSeverityType["HIGH"],
                                "high",
                            ),
                        ],
                        default=api.models.scan_result.ScanResultSeverityType["LOW"],
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "scan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.scan"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ScanPhoto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (api.models.scan_photo.ScanPhotoType["RIGHT"], "RIGHT"),
                            (api.models.scan_photo.ScanPhotoType["FRONT"], "FRONT"),
                            (api.models.scan_photo.ScanPhotoType["LEFT"], "LEFT"),
                            (api.models.scan_photo.ScanPhotoType["LOWER"], "LOWER"),
                            (api.models.scan_photo.ScanPhotoType["UPPER"], "UPPER"),
                        ],
                        default=api.models.scan_photo.ScanPhotoType["FRONT"],
                        max_length=50,
                    ),
                ),
                ("filename", models.CharField(max_length=70)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "scan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.scan"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
